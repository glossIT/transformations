
/* Connection ICON: <a href="https://www.flaticon.com/free-icons/chain" title="chain icons">Chain icons created by Smashicons - Flaticon</a> */


@namespace oxy "http://www.oxygenxml.com/extensions/author";
@namespace xi url('http://www.w3.org/2001/XInclude');
@media oxygen AND (min-width : 25cm) {

/* ---------------------------------------------------------- PAGE ----------------------------------------------------------*/
    oxy|document {
        background-color: grey;
    }
    TEI {
        border: 1px solid grey;
        background-color: #f4ede1;

    }
    /* Padding inside the page. */
    TEI {
        padding-top: 1em;
        padding-right: 0.5em;
        padding-left: 1em;
        padding-bottom: 1em;
    }
}



TEI {
    background-color: white;
    -oxy-display-tags: none !important;
    color: black;
    font-family: 'Junicode', 'Arial', 'Helvetica', 'Arial Unicode MS', sans-serif;
    font-size: 14pt;
}

oxy|comment {
    display: none !important;
}
TEI:before {
display: block;
    font-size: 30pt;
    font-weight: bold;
    color:black;
    text-align: center;
    margin-bottom: 1em;  
  content:
  oxy_xpath('teiHeader/fileDesc/titleStmt/title/text()')
 }
teiHeader {
    display: block;
    font-size: xx-large;
    font-weight:bold;
    color: green;
    text-align:center;
    border-top: 3px solid black;
    -oxy-foldable: true;
    content: 
    oxy_label(text,'Task:', styles, "text-decoration: underline;")
    oxy_label( text, '  Fill in the Metadata fields')  
}



fileDesc:before {
display:block;
color:black;
font-size:large;
text-align: center;
font-weight:normal;

    content:  oxy_label(text, 'Fill out the form with all the necessary metadata')
}

/*  Hidden */


/* MS Desc */

sourceDesc {
    display:block;
    color:black;
    font-weight: normal;
    font-size: large;
    text-align: left;
}

note[type="progress"] {
    display:block;
    text-align: right;
    content: 
    oxy_label( text, 'Section ')
    oxy_combobox(edit, '@n',  editable, false, values,'  ,in-progress, finished', labels, 'not yet started, in progress, finished')
    
}

sourceDesc > note[type="progress"]:not(n):after{
    
    content:     
    oxy_label(text,"    ðŸ”´", styles, "color:red")
}
note[type="progress"][n='']:after {
    color:red;
    content: "    ðŸ”´"
}
note[type="progress"][n='in-progress']:after {
    color:orange;
    content: "    ðŸ”´"
}
note[type="progress"][n='finished']:after {
    color:green;
    content: "    ðŸ”´"
}


msDesc {
    display:block;
}

/* Header Hidden  */
publicationStmt,
titleStmt,
fw,
seriesStmt,
encodingDesc,
profileDesc {
    display: none;
}
facsimile {
    display: none
}

/*  */
/*  Sectioning  */
/* hidden */

ab[type= "MarginTextZone:inner"]:empty,
ab[type= "MarginTextZone:outer"]:empty,
ab[type= "MarginTextZone:upper"]:empty,
ab[type= "MarginTextZone:lower"]:empty {
    display:none;
}

/*ab[type = MainZone],*/
ab[type = "MainZone:column#a"],
ab[type = "MainZone:column#b"],
ab[type = "MainZone:column#c"],
ab[type = "Mainzone:column#d"]{
    display: none;
}

/* */ 

/*  Sectiontitle and Task-Description */
body:before{
    display:block;
    font-size: xx-large;
    font-weight:bold;
    color: green;
    text-align:center;
    border-top: 3px solid black;
    content: 
    oxy_label(text,'Task:', styles, "text-decoration: underline;")
    oxy_label( text, '  Combine Multiline Glosses')
}


body{
    display: block;
    margin-top:2em;
    text-align:center;
    content: 'Combine all glosses, which should be one, but are flagged as multiple'
}
div {
    display:block;
    text-align: left;
}

/* Folio Number */

pb {
    font-weight: bold;
    font-size: xx-large;
    display: block;
      border-top: 3px solid black;
    content: 
    oxy_label(text, 'FOLIO')
 oxy_xpath('substring-after(@n, "fol.")')
}

/* TextZones */


ab[type= "MarginTextZone:inner"]{
    text-align:center;
    font-weight:bold;
    display: inline-block;
    content: "Inner Margin Text Zone "
}


ab[type= "MarginTextZone:outer"] {
    text-align:center;
    font-weight:bold;
    display: inline-block;
    content: "Outer Margin Text Zone "
}


ab[type= "MarginTextZone:lower"] {
    text-align:center;
    font-weight:bold;
    display: inline-block;
    content: "Lower Margin Text Zone "
}

ab[type= "MarginTextZone:upper"] {
    font-weight:bold;
    text-align:center;
    display: inline-block;
    content: "Upper Margin Text Zone "
}


ab[type= "MarginTextZone:outer"] {
    text-align:center;
    font-weight:bold;
    display: inline-block;
    content: "Outer Margin Text Zone "
}
ab[type= "MainZone"] {
    text-align:center;
    font-weight:bold;
    display: inline-block;
    content: "Main zone  "
}


lb {
    display:none;
}





/*  Glossen  */
gloss[type=signe_de_renvoi] {
    font-weight:normal;
    text-align:left;
    display: block;
    content:
    oxy_label(text, 'Gloss - Signe de Renvoi:  ', styles, 'font-weight:bold; color:#A47551;')       
}




gloss[type=gloss]:before {
    content: "|  "
}

gloss[type=gloss] {
font-weight:normal;
text-align:left;
    display: block;
    content: 
    
    oxy_label(text, 'Gloss: ', styles, 'font-weight:bold;color:brown;')      
}

ab[type=textline]{
font-weight:normal;
text-align:left;
    display: block;
    content: 
    
    oxy_label(text, 'Text: ', styles, 'font-weight:bold; color: #725E00;')
      
}

gloss[type=""]{
font-weight:normal;
    content:
    oxy_label(text, 'select glosstype:')
    oxy_combobox(edit, '@type', values, 'gloss,signe_de_renvoi', editable, false)
    
}

gloss[type="textline"]{
font-weight:normal;
    display:block;
    text-align:left;
    content:
    oxy_label(text, '!! select glosstype:', styles, "font-weight:bold; color:red")
    oxy_combobox(edit, '@type', values, 'gloss,signe_de_renvoi, textline', editable, false, labels, 'Gloss, Signe de Renvoi, ')
    
}

ab[type="gloss"]{
font-weight:normal;
    display:block;
    text-align:left;
    content:
    oxy_label(text, '!! select linetype:', styles, "font-weight:bold; color:red")
    oxy_combobox(edit, '@type', values, 'textline, gloss', editable, false, labels, 'Textline, ')
    
}

gloss[type=gloss]:has(gloss) {
    font-size:large;
    font-weight:bold;

    content:
    'ðŸ”—'
    oxy_label(text, '  Connected  ')
    'ðŸ”—    '
}

gloss[type=gloss]:has(gloss):after {
     font-size:large;
    font-weight:bold;

    content:
    '    ðŸ”—'
    oxy_label(text, '  Connected  ')
    'ðŸ”—'
}

gloss[type="gloss"] > gloss {
    display: inline-block;
    content: '     '
}


gloss[type="gloss"] > gloss:before {
    display: inline-block;
    content: ' '
}

